package com.poliakova.jdbc;

import com.poliakova.jdbc.util.ConnectionManager;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

/**
 * @author Oksana Poliakova on 02.07.2023
 * @projectName JDBC_practice
 */
public class JdbcSelectRunner {
    public static void main(String[] args) throws SQLException {
        executeQueryAndInsertWithGeneratedKeys();
        retrieveCourseById();
    }

    private static void retrieveCourseById() throws SQLException {
        String sql = """
                SELECT * 
                FROM university_course.public.course WHERE course_id = ?
                """;

        try (var connection = ConnectionManager.getConnection();
             PreparedStatement statement = connection.prepareStatement(sql)) {
            statement.setInt(1, 2); // Set parameter value
            ResultSet resultSet = statement.executeQuery();
            while (resultSet.next()) {
                String name = resultSet.getString("course_name");
                Integer id = resultSet.getInt("course_id");
                String description = resultSet.getString("course_description");
                System.out.println("ID: " + id + " " + "\nNAME: " + name + "\nDescription: " + description);
            }
        } catch (SQLException error) { }
    }

    private static void executeQueryAndInsertWithGeneratedKeys() throws SQLException {
        String sql = """
                SELECT *
                FROM university_course.public.students
                 """;

        String sql2 = """
                INSERT INTO info (data)
                VALUES 
                ('autogenerated')
                """;

        try (var connection = ConnectionManager.getConnection();
             var statement = connection.createStatement()) {

            var executeResult = statement.executeQuery(sql);
            System.out.println(executeResult);

            while (executeResult.next()) {
                int id = executeResult.getInt("student_id");
                String name = executeResult.getString("student_name");
                System.out.println("ID: " + id + ", Name: " + name);
            }

            // Executes the SQL statement and returns the number of affected rows,
            // while also specifying that generated keys should be returned.
            var executeResult2 = statement.executeUpdate(sql2, Statement.RETURN_GENERATED_KEYS);
            // Retrieves the generated keys resulting from the execution of the SQL statement.
            var generatedKeys = statement.getGeneratedKeys();
            // Checks if there are any generated keys
            if (generatedKeys.next()) {
                // Retrieves the generated ID value from the result set
                var generatedId = generatedKeys.getInt("id");
                System.out.println(generatedId);
            }
        }
    }
}



